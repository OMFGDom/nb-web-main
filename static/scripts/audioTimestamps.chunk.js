import{c as t}from"./main.js";class e{audio;storageKey;saveInterval=null;SAVE_INTERVAL_MS=1e3;STORAGE_PREFIX="audio_timestamp_";constructor(t,e){this.audio=t,this.storageKey=this.STORAGE_PREFIX+this.createStorageKey(e),this.init()}createStorageKey(t){return t.replace(/[^a-zA-Z0-9]/g,"_").substring(0,50)}init(){this.setupEventListeners(),this.loadTimestamp(),t(`Audio timestamp manager initialized for key: ${this.storageKey}`)}setupEventListeners(){this.audio.addEventListener("seeked",()=>{this.saveTimestamp()}),this.audio.addEventListener("play",()=>{this.startAutoSave()}),this.audio.addEventListener("pause",()=>{this.stopAutoSave(),this.saveTimestamp()}),this.audio.addEventListener("ended",()=>{this.stopAutoSave(),this.clearTimestamp()}),window.addEventListener("beforeunload",()=>{this.saveTimestamp()})}startAutoSave(){this.saveInterval||(this.saveInterval=setInterval(()=>{this.saveTimestamp()},this.SAVE_INTERVAL_MS))}stopAutoSave(){this.saveInterval&&(clearInterval(this.saveInterval),this.saveInterval=null)}saveTimestamp(){if(!this.audio.duration||!isFinite(this.audio.duration))return;const e={currentTime:this.audio.currentTime,duration:this.audio.duration,lastUpdated:Date.now()};try{localStorage.setItem(this.storageKey,JSON.stringify(e)),t(`Timestamp saved: ${Math.floor(e.currentTime)}s / ${Math.floor(e.duration)}s`)}catch(a){t("Failed to save timestamp to localStorage:","error",a)}}loadTimestamp(){try{const e=localStorage.getItem(this.storageKey);if(!e)return;const a=JSON.parse(e),i=6048e5;if(Date.now()-a.lastUpdated>i)return void this.clearTimestamp();const s=()=>{if(this.audio.duration&&isFinite(this.audio.duration)){Math.abs(this.audio.duration-a.duration)<1&&a.currentTime>0&&a.currentTime<this.audio.duration-5?(this.audio.currentTime=a.currentTime,t(`Timestamp restored: ${Math.floor(a.currentTime)}s`)):t("Timestamp not restored: duration mismatch or near end")}};this.audio.readyState>=1?s():this.audio.addEventListener("loadedmetadata",s,{once:!0})}catch(e){t("Failed to load timestamp from localStorage:","error",e),this.clearTimestamp()}}clearTimestamp(){try{localStorage.removeItem(this.storageKey),t("Timestamp cleared")}catch(e){t("Failed to clear timestamp:","error",e)}}clear(){this.stopAutoSave(),this.clearTimestamp()}getStoredTimestamp(){try{const t=localStorage.getItem(this.storageKey);return t?JSON.parse(t):null}catch{return null}}destroy(){this.stopAutoSave(),t()}}function a(t,a){return new e(t,a)}export{a as c};
