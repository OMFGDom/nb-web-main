# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from src.grpc import user_pb2 as user__pb2


class UsersStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUsersById = channel.unary_unary(
                '/Users/GetUsersById',
                request_serializer=user__pb2.GetUserByIdRequest.SerializeToString,
                response_deserializer=user__pb2.UserInfoResponce.FromString,
                )
        self.GetUsersBySlug = channel.unary_unary(
                '/Users/GetUsersBySlug',
                request_serializer=user__pb2.GetUserBySlugRequest.SerializeToString,
                response_deserializer=user__pb2.UserInfoResponce.FromString,
                )
        self.PostCheckToken = channel.unary_unary(
                '/Users/PostCheckToken',
                request_serializer=user__pb2.CheckTokenRequest.SerializeToString,
                response_deserializer=user__pb2.CheckTokenResponce.FromString,
                )
        self.GetUserList = channel.unary_unary(
                '/Users/GetUserList',
                request_serializer=user__pb2.GetUsersRequest.SerializeToString,
                response_deserializer=user__pb2.GetUserListResponce.FromString,
                )
        self.GetUserListByRole = channel.unary_unary(
                '/Users/GetUserListByRole',
                request_serializer=user__pb2.GetUserByFilterRequst.SerializeToString,
                response_deserializer=user__pb2.GetUserListResponce.FromString,
                )


class UsersServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUsersById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUsersBySlug(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostCheckToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserListByRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UsersServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUsersById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUsersById,
                    request_deserializer=user__pb2.GetUserByIdRequest.FromString,
                    response_serializer=user__pb2.UserInfoResponce.SerializeToString,
            ),
            'GetUsersBySlug': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUsersBySlug,
                    request_deserializer=user__pb2.GetUserBySlugRequest.FromString,
                    response_serializer=user__pb2.UserInfoResponce.SerializeToString,
            ),
            'PostCheckToken': grpc.unary_unary_rpc_method_handler(
                    servicer.PostCheckToken,
                    request_deserializer=user__pb2.CheckTokenRequest.FromString,
                    response_serializer=user__pb2.CheckTokenResponce.SerializeToString,
            ),
            'GetUserList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserList,
                    request_deserializer=user__pb2.GetUsersRequest.FromString,
                    response_serializer=user__pb2.GetUserListResponce.SerializeToString,
            ),
            'GetUserListByRole': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserListByRole,
                    request_deserializer=user__pb2.GetUserByFilterRequst.FromString,
                    response_serializer=user__pb2.GetUserListResponce.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Users', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Users(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUsersById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Users/GetUsersById',
            user__pb2.GetUserByIdRequest.SerializeToString,
            user__pb2.UserInfoResponce.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUsersBySlug(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Users/GetUsersBySlug',
            user__pb2.GetUserBySlugRequest.SerializeToString,
            user__pb2.UserInfoResponce.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostCheckToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Users/PostCheckToken',
            user__pb2.CheckTokenRequest.SerializeToString,
            user__pb2.CheckTokenResponce.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Users/GetUserList',
            user__pb2.GetUsersRequest.SerializeToString,
            user__pb2.GetUserListResponce.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserListByRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Users/GetUserListByRole',
            user__pb2.GetUserByFilterRequst.SerializeToString,
            user__pb2.GetUserListResponce.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
